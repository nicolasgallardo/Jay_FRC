// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3240.Project1.subsystems;

import org.usfirst.frc3240.Project1.RobotMap;
import org.usfirst.frc3240.Project1.commands.*;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;

import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class DriveTrain extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final SpeedController leftMotorFront = RobotMap.driveTrainLeftMotorFront;
    private final SpeedController leftMotorBack = RobotMap.driveTrainLeftMotorBack;
    private final SpeedController rightMotorFront = RobotMap.driveTrainRightMotorFront;
    private final SpeedController rightMotorBack = RobotMap.driveTrainRightMotorBack;
    private final RobotDrive robotDrive41 = RobotMap.driveTrainRobotDrive41;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private double autoSpeed=0.5;


    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        setDefaultCommand(new DriveWithJoysticks());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    public void driveWithJoysticks(double leftJoystick, double rightJoystick)
    {
    	robotDrive41.tankDrive(leftJoystick, rightJoystick);
    }
    public void driveForward()
    { robotDrive41.tankDrive(autoSpeed, autoSpeed);}
    public void driveBack()
    {robotDrive41.tankDrive(-autoSpeed, -autoSpeed);}
public void stop()
{robotDrive41.tankDrive(0, 0);
}
    
}

